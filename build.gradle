///El bloque buildscript es para configurar a Gradel como tal
//Es para descargar las dependencias que configuran a gradel como tal, no hace parte del codigo fuente 
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
//De aqui viene el plugin aggregator que esta en la linea 4
        classpath ("net.serenity-bdd:serenity-gradle-plugin:2.0.80")
    }
}


plugins {
    id 'java-library'
}


//Para agregar un comando que se llama aggregate, que es de Serenity y es para contruir el reporte
apply plugin: 'net.serenity-bdd.aggregator'


repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}


dependencies {
//Dependencias para poder automatizar con serenity , las dependencias de junit,cucumber, hamcrest.. no las usamos acá por que ya están incluidas en serenity
    implementation group: 'net.serenity-bdd', name: 'serenity-junit', version: '2.0.80'
    implementation group: 'net.serenity-bdd', name: 'serenity-cucumber', version: '1.9.45'
    implementation group: 'net.serenity-bdd', name: 'serenity-core', version: '2.0.80'
    implementation 'org.slf4j:slf4j-simple:1.7.7'
    implementation group: 'com.google.guava', name: 'guava', version: '23.0'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.141.59'
    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'

    //Es para obligar jars de forma manual (Nosotros mismos los descargamos el proyecto)
    implementation fileTree(dir: 'lib', include: '*.jar')
}


//Para configurar propiedades del comando de ejecucion de pruebas con Gradle
test {
//Ignorar los fallas y continua la ejecucion de todas las pruebas asi alguna falle
    ignoreFailures = true
}


//Continue asi falle alguna tarea de Gradle
gradle.startParameter.continueOnFailure = true